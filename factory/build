#!/bin/bash
set -e
NAME="$1"
VERSION="$2"
echo "HERE:$NAME:$VERSION"
REMOTE="warehouse:5000"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
IMAGE_NAME="$REMOTE/$NAME"
if [ -n "$VERSION" ]; then
  IMAGE_NAME+=".$VERSION"
fi

function clean {
  echo "Cleaning up..."
  if [ -n "$ID" ]; then
    CONTAINERS="$(docker ps -q)"
    ALL_CONTAINERS="$(docker ps -a -q)"
    TO_REMOVE=$(comm -23 <(echo "$ALL_CONTAINERS" | sort) <(echo "$CONTAINERS" | sort))
    if [ -n "$TO_REMOVE" ]; then
      # ID exists
      docker rm $(echo $TO_REMOVE) > /dev/null
    fi
    DANGLING=$(docker images --filter "dangling=true" -q)
    if [ -n "$DANGLING" ]; then
      docker rmi $DANGLING
    fi
    IMAGE_NAMES=$(docker images | awk '{print $1}')
    if [ -n "$(echo "$IMAGE_NAMES" | grep "^$IMAGE_NAME$")" ]; then
      # image exists
      echo "Removing image"
      docker rmi $IMAGE_NAME > /dev/null
    fi
  fi
  if [ $2 -ne 0 ]; then
    exit $2
  fi
}

trap 'clean ${LINENO} $?' EXIT SIGHUP SIGTERM SIGINT SIGPIPE

# Place the app inside the container
ID=$(cat | docker run -i -a stdin progrium/buildstep /bin/bash -c "mkdir -p /app && tar -xC /app && /build/builder")
docker attach $ID
test $(docker wait $ID) -eq 0
docker commit $ID "$IMAGE_NAME" > /dev/null

$DIR/saveConfig "$IMAGE_NAME" "$NAME" "$VERSION"
echo "Pushing $IMAGE_NAME"

docker push "$IMAGE_NAME"
