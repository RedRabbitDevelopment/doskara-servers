#!/bin/bash

GITUSER=${GITUSER:-git}
GITHOME="/home/$GITUSER"
SELF=`which $0`

case "$1" in
# Public commands

  init) # gitreceive init
    useradd -d $GITHOME $GITUSER || true
    mkdir -p $GITHOME/.ssh
    touch $GITHOME/.ssh/authorized_keys
    chmod +x $GITHOME/receiver
    chown -R $GITUSER $GITHOME
    # authenticating server
    echo "Creating public key for server access"
    KEY=$(curl $2)
    COMMAND="command=\"$SELF proxy-upload-key\",no-agent-forwarding,no-pty,no-user-rc,no-X11-forwarding,no-port-forwarding"
    $SELF edit-authorized "$COMMAND" "$KEY"
    echo "Created receiver script in $GITHOME for user '$GITUSER'."
    ;;

  edit-authorized) # sudo gitreceive edit-authorized <command> <key>
    AUTHORIZED_KEYS=$GITHOME/.ssh/authorized_keys
    COMMAND=$2
    KEY=$3
    echo "$COMMAND $KEY" >> $AUTHORIZED_KEYS
    ;;

  proxy-upload-key)
    USERNAME=$(echo $SSH_ORIGINAL_COMMAND | cut -d' ' -f 2)
    $SELF upload-key $USERNAME
    ;;

  upload-key) # sudo gitreceive upload-key <username>
    KEY=$(cat)
    USERNAME=$2
    
    FINGERPRINT=$(ssh-keygen -lf /dev/stdin <<< $(echo $KEY) | awk '{print $2}')
    # When this key is used, use the ssh 'forced command' feature to have 'gitreceive run' to run instead.
    KEY_PREFIX="command=\"$SELF run $USERNAME $FINGERPRINT\",no-agent-forwarding,no-pty,no-user-rc,no-X11-forwarding,no-port-forwarding"
    $SELF edit-authorized "$KEY_PREFIX" "$KEY"
    echo $FINGERPRINT
    ;;

# Internal commands
  run) 
    export RECEIVE_USER=$2
    export RECEIVE_FINGERPRINT=$3
    # ssh provides the original requested command in $SSH_ORIGINAL_COMMAND
    export RECEIVE_REPO="$(echo $SSH_ORIGINAL_COMMAND | awk '{print $2}' | perl -pe 's/(?<!\\)'\''//g' | sed 's/\\'\''/'\''/g')"
    $GITHOME/receiver read "$RECEIVE_REPO" "$RECEIVE_USER"
    rc=$?
    if [[ $rc != 0 ]] ; then
      exit $rc
    fi
    REPO_PATH="$GITHOME/$RECEIVE_REPO"
    if [ ! -d $REPO_PATH ]; then
      mkdir -p $REPO_PATH
      cd $REPO_PATH
      git init --bare > /dev/null
    fi
    cd $GITHOME
    PRERECEIVE_HOOK="$REPO_PATH/hooks/pre-receive"
    cat > $PRERECEIVE_HOOK <<EOF
#!/bin/bash
cat | $SELF hook
EOF
    chmod +x $PRERECEIVE_HOOK
    git-shell -c "$SSH_ORIGINAL_COMMAND"
    ;;

  hook)
    while read oldrev newrev refname
    do
      # Only run this script for the master branch. You can remove this 
      # if block if you wish to run it for others as well.
      if [[ $refname = "refs/heads/master" ]] ; then
        # Read/Write access are the same 
        #git archive $newrev | $GITHOME/receiver write "$RECEIVE_REPO" "$newrev" "$RECEIVE_USER" "$RECEIVE_FINGERPRINT"  
        echo "Success" 
        rc=$?
        if [[ $rc != 0 ]] ; then
          echo "      ERROR: failed on rev $newrev - push denied"
          exit $rc
        fi
      fi
    done
    #exit 1 # for debugging
    ;;

  *)
    echo "Usage: gitreceive <command> [options]"
    ;;
esac
